{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    timeslot: '',\n    speaker: '',\n    room: ''\n  });\n  const [options, setOptions] = useState({\n    timeslots: [],\n    speakers: [],\n    rooms: []\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values);\n  };\n\n  useEffect(() => {\n    console.log(id); // Update select session value\n\n    axios.get('http://localhost:5000/api/sessions/' + id).then(response => {\n      setValues({\n        name: response.data.name,\n        timeslot: response.data.timeslot,\n        speaker: response.data.speaker,\n        room: response.data.room\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }); // Get options for Time lsot, Speaker, Room\n\n    axios.all([axios.get('http://localhost:5000/api/timeslots/'), axios.get('http://localhost:5000/api/speakers/'), axios.get('http://localhost:5000/api/rooms/')]).then(axios.spread((timeslots, speakers, rooms) => {\n      // console.log(timeslots.data);\n      // console.log(speakers.data);\n      // console.log(rooms.data);\n      setOptions({\n        timeslots: timeslots.data,\n        speakers: speakers.data,\n        rooms: rooms.data\n      });\n    }));\n\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      axios.put('http://localhost:5000/api/sessions/' + id, values).then(res => console.log(res.data));\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    options\n  };\n};\n\n_s(useForm, \"hm7rXaR/OQ0zNDHVbI8W1WZaZ90=\", false, function () {\n  return [useParams];\n});\n\nexport default useForm;","map":{"version":3,"sources":["Y:/STUDY/WIT/Fall 20/Software Engineering/Boscc_Project/COMP4970_TeamYellow/Front_End_React/src/components/Session/Update/useForm-UpdateSession.js"],"names":["useState","useEffect","useParams","axios","useForm","callback","validate","values","setValues","name","timeslot","speaker","room","options","setOptions","timeslots","speakers","rooms","errors","setErrors","isSubmitting","setIsSubmitting","id","handleChange","e","value","target","handleSubmit","preventDefault","console","log","get","then","response","data","catch","error","all","spread","Object","keys","length","put","res"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  \n  const [values, setValues] = useState({\n    name: '',\n    timeslot: '',\n    speaker: '',\n    room: '',\n  });\n  \n  const [options, setOptions]=useState({\n    timeslots:[],\n    speakers:[],\n    rooms:[]\n  })\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { id } = useParams();\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values)\n    \n  };\n\n  useEffect(\n    () => {\n      console.log(id)\n      // Update select session value\n      axios.get('http://localhost:5000/api/sessions/'+id)\n          .then(response => {\n              setValues({\n                name: response.data.name,\n                timeslot: response.data.timeslot,\n                speaker: response.data.speaker,\n                room: response.data.room,\n              })\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n      // Get options for Time lsot, Speaker, Room\n      axios.all([\n        axios.get('http://localhost:5000/api/timeslots/'), \n        axios.get('http://localhost:5000/api/speakers/'),\n        axios.get('http://localhost:5000/api/rooms/')\n      ])\n      .then(axios.spread((timeslots, speakers,rooms) => {\n        // console.log(timeslots.data);\n        // console.log(speakers.data);\n        // console.log(rooms.data);\n        setOptions({\n          timeslots:timeslots.data,\n          speakers:speakers.data,\n          rooms:rooms.data,\n        })\n      }));    \n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        axios.put('http://localhost:5000/api/sessions/'+id, values)\n          .then(res => console.log(res.data));\n        callback();\n      }\n    },\n    [errors]\n  );\n  \n  return { handleChange, handleSubmit, values, errors , options};\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}