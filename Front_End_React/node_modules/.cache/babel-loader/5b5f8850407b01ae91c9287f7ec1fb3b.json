{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    start: '',\n    end: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values);\n  };\n\n  useEffect(() => {\n    console.log(id);\n    axios.get('http://localhost:5000/api/timeslots/' + id).then(response => {\n      console.log(response.data);\n      setValues({\n        name: response.data.name,\n        start: response.data.start,\n        end: response.data.end\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      axios.put('http://localhost:5000/api/timeslots/' + id, values).then(res => console.log(res.data));\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"UEXFZm1AZviVCup9z8kOOGspXhU=\", false, function () {\n  return [useParams];\n});\n\nexport default useForm;","map":{"version":3,"sources":["Y:/STUDY/WIT/Fall 20/Software Engineering/Boscc_Project/COMP4970_TeamYellow/Front_End_React/src/components/Timeslot/Update/useForm-UpdateTimeslot.js"],"names":["useState","useEffect","useParams","axios","useForm","callback","validate","values","setValues","name","start","end","errors","setErrors","isSubmitting","setIsSubmitting","id","handleChange","e","value","target","handleSubmit","preventDefault","console","log","get","then","response","data","catch","error","Object","keys","length","put","res"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACnCS,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,GAAG,EAAE;AAH8B,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAASd,SAAS,EAAxB;;AACA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAET,MAAAA,IAAF;AAAQU,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAZ,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQU;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,SAAS,CAACP,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAQ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACD,GALD;;AAOAN,EAAAA,SAAS,CACP,MAAM;AACJsB,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACAb,IAAAA,KAAK,CAACsB,GAAN,CAAU,yCAAuCT,EAAjD,EACKU,IADL,CACUC,QAAQ,IAAI;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACCpB,MAAAA,SAAS,CAAC;AACRC,QAAAA,IAAI,EAAEkB,QAAQ,CAACC,IAAT,CAAcnB,IADZ;AAERC,QAAAA,KAAK,EAAEiB,QAAQ,CAACC,IAAT,CAAclB,KAFb;AAGRC,QAAAA,GAAG,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB;AAHX,OAAD,CAAT;AAKH,KARL,EASKkB,KATL,CASW,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAXL;;AAYA,QAAIC,MAAM,CAACC,IAAP,CAAYpB,MAAZ,EAAoBqB,MAApB,KAA+B,CAA/B,IAAoCnB,YAAxC,EAAsD;AACpDX,MAAAA,KAAK,CAAC+B,GAAN,CAAU,yCAAuClB,EAAjD,EAAqDT,MAArD,EACGmB,IADH,CACQS,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACP,IAAhB,CADf;AAEAvB,MAAAA,QAAQ;AACT;AACF,GApBM,EAqBP,CAACO,MAAD,CArBO,CAAT;AAwBA,SAAO;AAAEK,IAAAA,YAAF;AAAgBI,IAAAA,YAAhB;AAA8Bd,IAAAA,MAA9B;AAAsCK,IAAAA;AAAtC,GAAP;AACD,CAlDD;;GAAMR,O;UASWF,S;;;AA2CjB,eAAeE,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  \n  const [values, setValues] = useState({\n    name: '',\n    start: '',\n    end: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { id } = useParams();\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values)\n  };\n\n  useEffect(\n    () => {\n      console.log(id)\n      axios.get('http://localhost:5000/api/timeslots/'+id)\n          .then(response => {\n             console.log(response.data)\n              setValues({\n                name: response.data.name,\n                start: response.data.start,\n                end: response.data.end,\n              })\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        axios.put('http://localhost:5000/api/timeslots/'+id, values)\n          .then(res => console.log(res.data));\n        callback();\n      }\n    },\n    [errors]\n  );\n  \n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}