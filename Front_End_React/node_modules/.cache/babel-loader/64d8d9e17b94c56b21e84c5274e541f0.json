{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\linx\\\\Documents\\\\GitHub\\\\COMP4970_TeamYellow\\\\Front_End_React\\\\src\\\\pages\\\\Speaker.js\";\nimport React, { Component } from 'react';\nimport { Button } from './Button';\nimport PopUp from './SpeakerPopupForm';\n\nconst normalizeInput = (value, previousValue) => {\n  if (!value) return value;\n  const currentValue = value.replace(/[^\\d]/g, '');\n  const cvLength = currentValue.length;\n\n  if (!previousValue || value.length > previousValue.length) {\n    if (cvLength < 4) return currentValue;\n    if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n    return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n  }\n};\n\nconst validateInput = value => {\n  let error = \"\";\n  if (!value) error = \"Required!\";else if (value.length !== 14) error = \"Invalid phone format. ex: (555) 555-5555\";\n  return error;\n};\n\nclass Speaker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seen: false\n    };\n\n    this.togglePop = () => {\n      this.setState({\n        seen: !this.state.seen\n      });\n    };\n  }\n\n  render() {\n    let addModalClose = () => this.setState({\n      addModalShow: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.togglePop,\n          type: \"button\",\n          buttonStyle: \"btn--primary--solid\",\n          buttonSize: \"btn--medium\",\n          children: \"Create New Speaker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), this.state.seen ? /*#__PURE__*/_jsxDEV(PopUp, {\n        toggle: this.togglePop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Speaker;","map":{"version":3,"sources":["C:/Users/linx/Documents/GitHub/COMP4970_TeamYellow/Front_End_React/src/pages/Speaker.js"],"names":["React","Component","Button","PopUp","normalizeInput","value","previousValue","currentValue","replace","cvLength","length","slice","validateInput","error","Speaker","state","seen","togglePop","setState","render","addModalClose","addModalShow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AAC/C,MAAI,CAACD,KAAL,EAAY,OAAOA,KAAP;AACZ,QAAME,YAAY,GAAGF,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAArB;AACA,QAAMC,QAAQ,GAAGF,YAAY,CAACG,MAA9B;;AAEA,MAAI,CAACJ,aAAD,IAAkBD,KAAK,CAACK,MAAN,GAAeJ,aAAa,CAACI,MAAnD,EAA2D;AACzD,QAAID,QAAQ,GAAG,CAAf,EAAkB,OAAOF,YAAP;AAClB,QAAIE,QAAQ,GAAG,CAAf,EAAkB,OAAQ,IAAGF,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,KAAIJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAsB,EAA9D;AAClB,WAAQ,IAAGJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,KAAIJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,IAAGJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAA0B,EAA9F;AACD;AACF,CAVD;;AAYA,MAAMC,aAAa,GAAGP,KAAK,IAAI;AAC7B,MAAIQ,KAAK,GAAG,EAAZ;AAEA,MAAI,CAACR,KAAL,EAAYQ,KAAK,GAAG,WAAR,CAAZ,KACK,IAAIR,KAAK,CAACK,MAAN,KAAiB,EAArB,EAAyBG,KAAK,GAAG,0CAAR;AAE9B,SAAOA,KAAP;AACD,CAPD;;AASA,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9Bc,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AADA,KADsB;;AAAA,SAK7BC,SAL6B,GAKjB,MAAM;AACjB,WAAKC,QAAL,CAAc;AACbF,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADL,OAAd;AAGA,KAT4B;AAAA;;AAW9BG,EAAAA,MAAM,GAAE;AACN,QAAIC,aAAa,GAAG,MAAM,KAAKF,QAAL,CAAc;AAACG,MAAAA,YAAY,EAAC;AAAd,KAAd,CAA1B;;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKJ,SAAtB;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,WAAW,EAAC,qBAFZ;AAGA,UAAA,UAAU,EAAC,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EASG,KAAKF,KAAL,CAAWC,IAAX,gBAAkB,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKC;AAApB;AAAA;AAAA;AAAA;AAAA,cAAlB,GAAsD,IATzD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1B6B;;AA4BhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from './Button';\r\nimport PopUp from './SpeakerPopupForm';\r\n\r\nconst normalizeInput = (value, previousValue) => {\r\n  if (!value) return value;\r\n  const currentValue = value.replace(/[^\\d]/g, '');\r\n  const cvLength = currentValue.length;\r\n  \r\n  if (!previousValue || value.length > previousValue.length) {\r\n    if (cvLength < 4) return currentValue;\r\n    if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\r\n    return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\r\n  }\r\n};\r\n\r\nconst validateInput = value => {\r\n  let error = \"\"\r\n  \r\n  if (!value) error = \"Required!\"\r\n  else if (value.length !== 14) error = \"Invalid phone format. ex: (555) 555-5555\";\r\n  \r\n  return error;\r\n};\r\n\r\nclass Speaker extends Component {\r\n  state = {\r\n    seen: false\r\n    };\r\n\r\n   togglePop = () => {\r\n    this.setState({\r\n     seen: !this.state.seen\r\n    });\r\n   };\r\n  \r\n  render(){\r\n    let addModalClose = () => this.setState({addModalShow:false})\r\n    return (\r\n      <div>\r\n        <div className=\"products\">\r\n          <Button onClick={this.togglePop}\r\n          type=\"button\" \r\n          buttonStyle=\"btn--primary--solid\"\r\n          buttonSize=\"btn--medium\">\r\n            Create New Speaker\r\n          </Button>\r\n        </div>\r\n        {this.state.seen ? <PopUp toggle={this.togglePop} /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Speaker;"]},"metadata":{},"sourceType":"module"}