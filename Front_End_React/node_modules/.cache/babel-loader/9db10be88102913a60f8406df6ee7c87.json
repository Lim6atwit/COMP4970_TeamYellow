{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\linx\\\\Documents\\\\GitHub\\\\COMP4970_TeamYellow\\\\Front_End_React\\\\src\\\\pages\\\\SpeakerForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useForm from './useSpeakerForm';\nimport './FormFormat.css';\n\nconst normalizeInput = (value, previousValue) => {\n  if (!value) return value;\n  const currentValue = value.replace(/[^\\d]/g, '');\n  const cvLength = currentValue.length;\n\n  if (!previousValue || value.length > previousValue.length) {\n    if (cvLength < 4) return currentValue;\n    if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n    return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n  }\n};\n\nexport const Form = () => {\n  _s();\n\n  const {\n    handleChange,\n    values\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-content-right\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create New Speaker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"speakerName\",\n          className: \"form-label\",\n          children: \"Speaker Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"speakerName\",\n          className: \"form-input\",\n          placeholder: \"Enter a speaker name\",\n          value: values.speakerName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"form-input\",\n          placeholder: \"Enter an email address\",\n          value: values.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cellphone\",\n          className: \"form-label\",\n          children: \"Cellphone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"cellphone\",\n          className: \"form-input\",\n          placeholder: \"Enter a cellphone number (ex: 123-456-7890)\",\n          value: this.state.cellphone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dayphone\",\n          className: \"form-label\",\n          children: \"Dayphone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"dayphone\",\n          className: \"form-input\",\n          placeholder: \"Enter a dayphone number (ex: 123-456-7890)\",\n          value: this.state.dayphone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-input-btn\",\n        type: \"submit\",\n        children: \"Add New Speaker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-input-btn\",\n        type: \"submit\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"9+GNu3f25yt+rbadwmIAM+m+2kM=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/linx/Documents/GitHub/COMP4970_TeamYellow/Front_End_React/src/pages/SpeakerForm.js"],"names":["React","useForm","normalizeInput","value","previousValue","currentValue","replace","cvLength","length","slice","Form","handleChange","values","speakerName","email","state","cellphone","dayphone"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport useForm from './useSpeakerForm'\r\nimport './FormFormat.css'\r\n\r\nconst normalizeInput = (value, previousValue) => {\r\n  if (!value) return value;\r\n  const currentValue = value.replace(/[^\\d]/g, '');\r\n  const cvLength = currentValue.length;\r\n  \r\n  if (!previousValue || value.length > previousValue.length) {\r\n    if (cvLength < 4) return currentValue;\r\n    if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\r\n    return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\r\n  }\r\n};\r\n\r\nexport const Form = () => {\r\n  const {handleChange, values} = useForm();\r\n\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form className=\"form\">\r\n        <h1>Create New Speaker</h1>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"speakerName\" className=\"form-label\">\r\n            Speaker Name:\r\n          </label>\r\n          <input type=\"text\" name=\"speakerName\" className=\"form-input\" placeholder=\"Enter a speaker name\" value={values.speakerName} onChange={handleChange}></input>    \r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email: \r\n          </label>\r\n          <input type=\"email\" name=\"email\" className=\"form-input\" placeholder=\"Enter an email address\" value={values.email} onChange={handleChange}></input>   \r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"cellphone\" className=\"form-label\">\r\n            Cellphone: \r\n          </label>\r\n          <input type=\"tel\" name=\"cellphone\" className=\"form-input\" placeholder=\"Enter a cellphone number (ex: 123-456-7890)\" value={this.state.cellphone} onChange={handleChange}></input>\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"dayphone\" className=\"form-label\">\r\n            Dayphone:\r\n          </label>\r\n          <input type=\"tel\" name=\"dayphone\" className=\"form-input\" placeholder=\"Enter a dayphone number (ex: 123-456-7890)\" value={this.state.dayphone} onChange={handleChange}></input>\r\n        </div>\r\n        <button className='form-input-btn' type='submit'>\r\n          Add New Speaker\r\n        </button>\r\n        <button className='form-input-btn' type='submit'>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}