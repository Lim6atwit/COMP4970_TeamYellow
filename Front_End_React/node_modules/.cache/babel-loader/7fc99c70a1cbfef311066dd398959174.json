{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: '',\n    timeslot: '',\n    session: '',\n    room: ''\n  });\n  const [options, setOptions] = useState({\n    timeslots: [],\n    speakers: [],\n    rooms: []\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values);\n  };\n\n  useEffect(() => {\n    axios.all([axios.get('http://localhost:5000/api/timeslots/'), axios.get('http://localhost:5000/api/speakers/'), axios.get('http://localhost:5000/api/rooms/')]).then(axios.spread((timeslots, speakers, rooms) => {\n      // console.log(timeslots.data);\n      // console.log(speakers.data);\n      // console.log(rooms.data);\n      setOptions({\n        timeslots: timeslots.data,\n        speakers: speakers.data,\n        rooms: rooms.data\n      });\n    }));\n\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      axios.post('http://localhost:5000/api/sessions', values).then(res => console.log(res.data));\n      callback();\n    }\n  }, [errors]); // console.log(values)\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    options\n  };\n};\n\n_s(useForm, \"ov+AvGq+ZPL/uopmzBAXaU2NmgA=\");\n\nexport default useForm;","map":{"version":3,"sources":["Y:/STUDY/WIT/Fall 20/Software Engineering/Boscc_Project/COMP4970_TeamYellow/Front_End_React/src/components/Session/Create/useForm-CreateSession.js"],"names":["useState","useEffect","axios","useForm","callback","validate","values","setValues","name","timeslot","session","room","options","setOptions","timeslots","speakers","rooms","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","value","target","handleSubmit","preventDefault","console","log","all","get","then","spread","data","Object","keys","length","post","res"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,OAAO,EAAE,EAH0B;AAInCC,IAAAA,IAAI,EAAE;AAJ6B,GAAD,CAApC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAsBb,QAAQ,CAAC;AACnCc,IAAAA,SAAS,EAAC,EADyB;AAEnCC,IAAAA,QAAQ,EAAC,EAF0B;AAGnCC,IAAAA,KAAK,EAAC;AAH6B,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMqB,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEd,MAAAA,IAAF;AAAQe,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAjB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACE,IAAD,GAAQe;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAR,IAAAA,SAAS,CAACb,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAc,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAZ;AACD,GAND;;AASAL,EAAAA,SAAS,CACP,MAAM;AACJC,IAAAA,KAAK,CAAC2B,GAAN,CAAU,CACR3B,KAAK,CAAC4B,GAAN,CAAU,sCAAV,CADQ,EAER5B,KAAK,CAAC4B,GAAN,CAAU,qCAAV,CAFQ,EAGR5B,KAAK,CAAC4B,GAAN,CAAU,kCAAV,CAHQ,CAAV,EAKCC,IALD,CAKM7B,KAAK,CAAC8B,MAAN,CAAa,CAAClB,SAAD,EAAYC,QAAZ,EAAqBC,KAArB,KAA+B;AAEhD;AACA;AACA;AACAH,MAAAA,UAAU,CAAC;AACTC,QAAAA,SAAS,EAACA,SAAS,CAACmB,IADX;AAETlB,QAAAA,QAAQ,EAACA,QAAQ,CAACkB,IAFT;AAGTjB,QAAAA,KAAK,EAACA,KAAK,CAACiB;AAHH,OAAD,CAAV;AAKD,KAVK,CALN;;AAiBA,QAAIC,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBmB,MAApB,KAA+B,CAA/B,IAAoCjB,YAAxC,EAAsD;AACpDjB,MAAAA,KAAK,CAACmC,IAAN,CAAW,oCAAX,EAAiD/B,MAAjD,EACGyB,IADH,CACQO,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACL,IAAhB,CADf;AAEA7B,MAAAA,QAAQ;AACT;AAEF,GAzBM,EA0BP,CAACa,MAAD,CA1BO,CAAT,CAhCsC,CA4DtC;;AACA,SAAO;AAAEI,IAAAA,YAAF;AAAgBI,IAAAA,YAAhB;AAA8BnB,IAAAA,MAA9B;AAAsCW,IAAAA,MAAtC;AAA8CL,IAAAA;AAA9C,GAAP;AACD,CA9DD;;GAAMT,O;;AAgEN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    name: '',\n    timeslot: '',\n    session: '',\n    room: '',\n  });\n  const [options, setOptions]=useState({\n    timeslots:[],\n    speakers:[],\n    rooms:[]\n  })\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values)\n  };\n  \n\n  useEffect(\n    () => {\n      axios.all([\n        axios.get('http://localhost:5000/api/timeslots/'), \n        axios.get('http://localhost:5000/api/speakers/'),\n        axios.get('http://localhost:5000/api/rooms/')\n      ])\n      .then(axios.spread((timeslots, speakers,rooms) => {\n        \n        // console.log(timeslots.data);\n        // console.log(speakers.data);\n        // console.log(rooms.data);\n        setOptions({\n          timeslots:timeslots.data,\n          speakers:speakers.data,\n          rooms:rooms.data,\n        })\n      }));\n\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        axios.post('http://localhost:5000/api/sessions', values)\n          .then(res => console.log(res.data));\n        callback();\n      }\n        \n    },\n    [errors]\n  );\n  // console.log(values)\n  return { handleChange, handleSubmit, values, errors, options };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}