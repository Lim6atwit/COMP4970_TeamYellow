{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = () => {\n  _s();\n\n  const normalizeInput = (value, previousValue) => {\n    if (!value) return value;\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n      if (cvLength < 4) return currentValue;\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  };\n\n  const validateInput = value => {\n    let error = \"\";\n    if (!value) error = \"Required!\";else if (value.length !== 14) error = \"Invalid phone format. ex: (555) 555-5555\";\n    return error;\n  };\n\n  const [values, setValues] = useState({\n    roomName: '',\n    capacity: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = e => {\n    this.setState(prevState => ({\n      phone: normalizeInput(value, prevState.phone)\n    })); // const {name, value} = e.target\n    // setValues({\n    // ...values,\n    // [name]: value\n    // })\n  };\n\n  return {\n    handleChange,\n    values\n  };\n};\n\n_s(useForm, \"/gleudU8l4g0uDGatL2dZriz0mg=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/linx/Documents/GitHub/COMP4970_TeamYellow/Front_End_React/src/pages/useRoomForm.js"],"names":["useState","useEffect","useForm","normalizeInput","value","previousValue","currentValue","replace","cvLength","length","slice","validateInput","error","values","setValues","roomName","capacity","errors","setErrors","handleChange","e","setState","prevState","phone"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AAC7C,QAAI,CAACD,KAAL,EAAY,OAAOA,KAAP;AACZ,UAAME,YAAY,GAAGF,KAAK,CAACG,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAArB;AACA,UAAMC,QAAQ,GAAGF,YAAY,CAACG,MAA9B;;AAEA,QAAI,CAACJ,aAAD,IAAkBD,KAAK,CAACK,MAAN,GAAeJ,aAAa,CAACI,MAAnD,EAA2D;AACzD,UAAID,QAAQ,GAAG,CAAf,EAAkB,OAAOF,YAAP;AAClB,UAAIE,QAAQ,GAAG,CAAf,EAAkB,OAAQ,IAAGF,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,KAAIJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAsB,EAA9D;AAClB,aAAQ,IAAGJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,KAAIJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAyB,IAAGJ,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAA0B,EAA9F;AACD;AACJ,GAVD;;AAYA,QAAMC,aAAa,GAAGP,KAAK,IAAI;AAC3B,QAAIQ,KAAK,GAAG,EAAZ;AAEA,QAAI,CAACR,KAAL,EAAYQ,KAAK,GAAG,WAAR,CAAZ,KACK,IAAIR,KAAK,CAACK,MAAN,KAAiB,EAArB,EAAyBG,KAAK,GAAG,0CAAR;AAE9B,WAAOA,KAAP;AACH,GAPD;;AASA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AAChCe,IAAAA,QAAQ,EAAE,EADsB;AAEhCC,IAAAA,QAAQ,EAAE;AAFsB,GAAD,CAAnC;AAKA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAAnC;;AAGA,QAAMmB,YAAY,GAAGC,CAAC,IAAI;AACtB,SAAKC,QAAL,CAAcC,SAAS,KAAI;AAAEC,MAAAA,KAAK,EAAEpB,cAAc,CAACC,KAAD,EAAQkB,SAAS,CAACC,KAAlB;AAAvB,KAAJ,CAAvB,EADsB,CAEtB;AACA;AACI;AACA;AACJ;AACH,GAPD;;AASA,SAAO;AAACJ,IAAAA,YAAD;AAAeN,IAAAA;AAAf,GAAP;AACH,CAxCD;;GAAMX,O;;AA0CN,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst useForm = () => {\r\n    const normalizeInput = (value, previousValue) => {\r\n        if (!value) return value;\r\n        const currentValue = value.replace(/[^\\d]/g, '');\r\n        const cvLength = currentValue.length;\r\n        \r\n        if (!previousValue || value.length > previousValue.length) {\r\n          if (cvLength < 4) return currentValue;\r\n          if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\r\n          return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\r\n        }\r\n    };\r\n    \r\n    const validateInput = value => {\r\n        let error = \"\"\r\n        \r\n        if (!value) error = \"Required!\"\r\n        else if (value.length !== 14) error = \"Invalid phone format. ex: (555) 555-5555\";\r\n        \r\n        return error;\r\n    };\r\n      \r\n    const[values, setValues] = useState({\r\n        roomName: '',\r\n        capacity: ''\r\n    })\r\n\r\n    const[errors, setErrors] = useState({})\r\n\r\n\r\n    const handleChange = e => {\r\n        this.setState(prevState=> ({ phone: normalizeInput(value, prevState.phone) }));\r\n        // const {name, value} = e.target\r\n        // setValues({\r\n            // ...values,\r\n            // [name]: value\r\n        // })\r\n    }\r\n\r\n    return {handleChange, values}\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}